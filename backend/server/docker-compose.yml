
services:
  # FastAPI application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=host.docker.internal
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test
      - CELERY_BROKER_URL=pyamqp://guest@rabbitmq//
      - CELERY_RESULT_BACKEND=redis://redis:6379
    depends_on:
      - redis
      - rabbitmq
    volumes:
      - ./uploads:/app/uploads
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:15
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for Celery result backend
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # RabbitMQ for Celery message broker
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
  # Celery worker
  worker:
    build: .
    command: celery -A app.workers.celery_app worker --loglevel=info
    environment:
      - POSTGRES_SERVER=host.docker.internal
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test
      - CELERY_BROKER_URL=pyamqp://guest@rabbitmq//
      - CELERY_RESULT_BACKEND=redis://redis:6379
    depends_on:
      - redis
      - rabbitmq
    volumes:
      - ./uploads:/app/uploads
      - .:/app

volumes:
  postgres_data:
